with "config/bare_drivers_config.gpr";
with "config/bare_svd_config.gpr";
project Bare_Drivers is

   for Target use "arm-eabi";
   for Runtime ("Ada") use "light-tasking-stm32f746disco";

   Src_Dirs := ();

   case Bare_Drivers_Config.ADC is
      when "yes" =>
         Src_Dirs := Src_Dirs & ("src/adc/" & Bare_Svd_Config.FAMILY);
   end case;
   case Bare_Drivers_Config.DAC is
      when "yes" =>
         Src_Dirs := Src_Dirs & ("src/dac/" & Bare_Svd_Config.FAMILY);
   end case;
   case Bare_Drivers_Config.DCMI is
      when "yes" =>
         Src_Dirs := Src_Dirs & ("src/dcmi/" & Bare_Svd_Config.FAMILY);
   end case;
   case Bare_Drivers_Config.DEVICE_ID is
      when "yes" =>
         Src_Dirs := Src_Dirs & ("src/device_id/" & Bare_Svd_Config.FAMILY);
   end case;
   case Bare_Drivers_Config.DMA is
      when "yes" =>
         Src_Dirs := Src_Dirs & ("src/dma/" & Bare_Svd_Config.FAMILY);
   end case;
   case Bare_Drivers_Config.DMA2D is
      when "yes" =>
         Src_Dirs := Src_Dirs & ("src/dma2d/" & Bare_Svd_Config.FAMILY);
   end case;
   case Bare_Drivers_Config.ETH is
      when "yes" =>
         Src_Dirs := Src_Dirs & ("src/eth/" & Bare_Svd_Config.FAMILY);
   end case;
   case Bare_Drivers_Config.EXTI is
      when "yes" =>
         Src_Dirs := Src_Dirs & ("src/exti/" & Bare_Svd_Config.FAMILY);
   end case;
   case Bare_Drivers_Config.FMC is
      when "yes" =>
         Src_Dirs := Src_Dirs & ("src/fmc/" & Bare_Svd_Config.FAMILY);
   end case;
   case Bare_Drivers_Config.GPIO is
      when "yes" =>
         Src_Dirs := Src_Dirs & ("src/gpio/" & Bare_Svd_Config.FAMILY);
   end case;
   case Bare_Drivers_Config.I2C is
      when "yes" =>
         Src_Dirs := Src_Dirs & ("src/i2c/" & Bare_Svd_Config.FAMILY);
   end case;
   case Bare_Drivers_Config.I2S is
      when "yes" =>
         Src_Dirs := Src_Dirs & ("src/i2s/" & Bare_Svd_Config.FAMILY);
   end case;
   case Bare_Drivers_Config.IWDG is
      when "yes" =>
         Src_Dirs := Src_Dirs & ("src/iwdg/" & Bare_Svd_Config.FAMILY);
   end case;
   case Bare_Drivers_Config.LTDC is
      when "yes" =>
         Src_Dirs := Src_Dirs & ("src/ltdc/" & Bare_Svd_Config.FAMILY);
   end case;
   case Bare_Drivers_Config.POWER_CONTROL is
      when "yes" =>
         Src_Dirs := Src_Dirs & ("src/power_control/" &
                                 Bare_Svd_Config.FAMILY & "/" &
                                 Bare_Svd_Config.CORE_TYPE & "/" &
                                 Bare_Svd_Config.CORE);
   end case;
   case Bare_Drivers_Config.PWM is
      when "yes" =>
         Src_Dirs := Src_Dirs & ("src/pwm/" & Bare_Svd_Config.FAMILY);
   end case;
   case Bare_Drivers_Config.RCC is
      when "yes" =>
         Src_Dirs := Src_Dirs & ("src/rcc/" &
                                 Bare_Svd_Config.FAMILY & "/" &
                                 Bare_Svd_Config.CORE_TYPE & "/" &
                                 Bare_Svd_Config.CORE);
   end case;
   case Bare_Drivers_Config.RNG is
      when "yes" =>
         Src_Dirs := Src_Dirs & ("src/rng/" & Bare_Svd_Config.FAMILY);
   end case;
   case Bare_Drivers_Config.RTC is
      when "yes" =>
         Src_Dirs := Src_Dirs & ("src/rtc/" & Bare_Svd_Config.FAMILY);
   end case;
   case Bare_Drivers_Config.SAI is
      when "yes" =>
         Src_Dirs := Src_Dirs & ("src/sai/" & Bare_Svd_Config.FAMILY);
   end case;
   case Bare_Drivers_Config.SD is
      when "yes" =>
         Src_Dirs := Src_Dirs & 
         ("src/sd/" & Bare_Svd_Config.FAMILY,
          "src/sd/" & Bare_Svd_Config.FAMILY & "/" & Bare_Drivers_Config.DEVICE);
   end case;
   case Bare_Drivers_Config.SPI is
      when "yes" =>
         Src_Dirs := Src_Dirs & ("src/spi/" & Bare_Svd_Config.FAMILY);
   end case;
   case Bare_Drivers_Config.SYSCFG is
      when "yes" =>
         Src_Dirs := Src_Dirs & ("src/syscfg/" & Bare_Svd_Config.FAMILY);
   end case;
   case Bare_Drivers_Config.TIMERS is
      when "yes" =>
         Src_Dirs := Src_Dirs & ("src/timers/" & Bare_Svd_Config.FAMILY);
   end case;
   case Bare_Drivers_Config.WWDG is
      when "yes" =>
         Src_Dirs := Src_Dirs & ("src/wwdg/" & Bare_Svd_Config.FAMILY);
   end case;

   for Library_Name use "_" & Bare_Svd_Config.FAMILY & "_drivers";
   for Library_Version use Project'Library_Name & ".so." & Bare_Drivers_Config.Crate_Version;

   for Source_Dirs use ("src/", "config/") & Src_Dirs;
   for Object_Dir use "obj/" & Bare_Drivers_Config.Build_Profile;
   for Create_Missing_Dirs use "True";
   for Library_Dir use "lib";

   type Library_Type_Type is ("relocatable", "static", "static-pic");
   Library_Type : Library_Type_Type :=
     external ("BARE_DRIVERS_LIBRARY_TYPE", external ("LIBRARY_TYPE", "static"));
   for Library_Kind use Library_Type;

   package Compiler is
      for Default_Switches ("Ada") use Bare_Drivers_Config.Ada_Compiler_Switches;
   end Compiler;

   package Binder is
      for Switches ("Ada") use ("-Es"); --  Symbolic traceback
   end Binder;

   package Install is
      for Artifacts (".") use ("share");
   end Install;

end Bare_Drivers;
